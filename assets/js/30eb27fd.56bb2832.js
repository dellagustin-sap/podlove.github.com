(self.webpackChunkpodlove_docs=self.webpackChunkpodlove_docs||[]).push([[8838],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2353:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],p={title:"Runtime API"},s={unversionedId:"v5/extensions/runtime-api",id:"v5/extensions/runtime-api",isDocsHomePage:!1,title:"Runtime API",description:"Every player interaction is reflected in the redux store.",source:"@site/web-player/v5/extensions/runtime-api.mdx",sourceDirName:"v5/extensions",slug:"/v5/extensions/runtime-api",permalink:"/podlove-web-player/v5/extensions/runtime-api",editUrl:"https://github.com/podlove/podlove.github.com/edit/master/web-player/v5/extensions/runtime-api.mdx",version:"current",frontMatter:{title:"Runtime API"},sidebar:"0",previous:{title:"Localization",permalink:"/podlove-web-player/v5/templating/localization"},next:{title:"External Control",permalink:"/podlove-web-player/v5/extensions/plugin-external"}},l=[{value:"Development",id:"development",children:[]}],c={toc:l};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Every player interaction is reflected in the ",(0,a.kt)("a",{parentName:"p",href:"http://redux.js.org/docs/api/Store.html"},"redux store"),".\nAccessing the players store enables the full control of the player while running.\nReacting to player events can be done by attatching to the latest action."),(0,a.kt)("h4",{id:"getting-store-access"},"Getting store access"),(0,a.kt)("p",null,"The store is provided after the player was initialized as a promise resolved. A redux store has two methods available: ",(0,a.kt)("inlineCode",{parentName:"p"},"subscribe()"),", to subscribe to store changes, ",(0,a.kt)("inlineCode",{parentName:"p"},"getState()")," to get the current state obejct and ",(0,a.kt)("inlineCode",{parentName:"p"},"dispatch({ type: 'action', payload: 'data' })")," to dispatch a state change. The following example will set the playtime to one minute after the player was initialized."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  podlovePlayer('#example', '/path/to/episode/definition/or/object', '/path/to/configuration/or/object').then(store => {\n    store.dispatch({\n      type: 'PLAYER_REQUEST_PLAYTIME',\n      payload: 60000\n    });\n  })\n<\/script>\n")),(0,a.kt)("h3",{id:"development"},"Development"),(0,a.kt)("p",null,"To improve the development experience it is highly recommended to use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux-devtools"},"redux devtools")," browser extension to get a better understandig about action dispatches and state changes."),(0,a.kt)("h4",{id:"store-actions"},"Store Actions"),(0,a.kt)("p",null,"The player provides ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/podlove/podlove-ui/blob/development/packages/player/actions/types.js"},"dozens of actions")," to interact with the store. To simplify the implementation a ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@podlove/player-actions"},"dedicated actions package")," can be used:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install @podlove/player-actions\n")),(0,a.kt)("p",null,"Once you've added this dependency you should be able to use it likewise:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { requestPlaytime } from '@podlove/player-actions/timepiece'\n\npodlovePlayer('#example', '/path/to/episode/definition/or/object', '/path/to/configuration/or/object').then(store => {\n  store.dispatch(requestPlaytime(60000));\n})\n")),(0,a.kt)("h4",{id:"reacting-to-player-events"},"Reacting to player events"),(0,a.kt)("p",null,"Some use cases require a reaction to a player event. This is also possible by subscribing to the store:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { BACKEND_PLAY } from '@podlove/player-actions/types'\n\npodlovePlayer('#example', '/path/to/episode/definition/or/object', '/path/to/configuration/or/object').then(store => {\n  store.subscribe(() => {\n    const { lastAction } = store.getState();\n\n    if (lastAction.type === BACKEND_PLAY) {\n      // Do something once the the player starts playing\n    }\n  })\n})\n")))}u.isMDXComponent=!0}}]);