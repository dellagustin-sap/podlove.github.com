(self.webpackChunkpodlove_docs=self.webpackChunkpodlove_docs||[]).push([[5725],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=l,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?n.createElement(k,r(r({ref:t},u),{},{components:a})):n.createElement(k,r({ref:t},u))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},310:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var n=a(2122),l=a(9756),i=(a(7294),a(3905)),r=["components"],o={title:"Podcast"},s={unversionedId:"reference/templates/template-tags/podcast",id:"reference/templates/template-tags/podcast",isDocsHomePage:!1,title:"Podcast",description:"Title",source:"@site/publisher/reference/templates/template-tags/podcast.mdx",sourceDirName:"reference/templates/template-tags",slug:"/reference/templates/template-tags/podcast",permalink:"/podlove-publisher/reference/templates/template-tags/podcast",editUrl:"https://github.com/podlove/podlove.github.com/edit/master/publisher/publisher/reference/templates/template-tags/podcast.mdx",version:"current",frontMatter:{title:"Podcast"},sidebar:"0",previous:{title:"Templates",permalink:"/podlove-publisher/reference/templates/templates"},next:{title:"Episode",permalink:"/podlove-publisher/reference/templates/template-tags/episode"}},p=[{value:"Title",id:"title",children:[]},{value:"Subtitle",id:"subtitle",children:[]},{value:"Summary",id:"summary",children:[]},{value:"Mnemonic / Abbreviation",id:"mnemonic--abbreviation",children:[]},{value:"Type",id:"type",children:[]},{value:"Image URL",id:"image-url",children:[]},{value:"Image",id:"image",children:[]},{value:"Author name",id:"author-name",children:[]},{value:"Owner name",id:"owner-name",children:[]},{value:"Publisher name",id:"publisher-name",children:[]},{value:"Publisher URL",id:"publisher-url",children:[]},{value:"Podcast Home URL",id:"podcast-home-url",children:[]},{value:"Episodes",id:"episodes",children:[]},{value:"Feeds",id:"feeds",children:[]},{value:"Feed",id:"feed",children:[]},{value:"License",id:"license",children:[]},{value:"Setting",id:"setting",children:[]},{value:"Contributors",id:"contributors",children:[]},{value:"Contributor",id:"contributor",children:[]},{value:"Seasons",id:"seasons",children:[]},{value:"Shows",id:"shows",children:[]},{value:"Services",id:"services",children:[]},{value:"Subscribe Button",id:"subscribe-button",children:[]}],u={toc:p};function d(e){var t=e.components,a=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"title"},"Title"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.title")),(0,i.kt)("h3",{id:"subtitle"},"Subtitle"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.subtitle")),(0,i.kt)("h3",{id:"summary"},"Summary"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.summary")),(0,i.kt)("h3",{id:"mnemonic--abbreviation"},"Mnemonic / Abbreviation"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.mnemonic")),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.type")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"One of: episodic, serial")),(0,i.kt)("h3",{id:"image-url"},"Image URL"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.imageUrl")),(0,i.kt)("h3",{id:"image"},"Image"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.image")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"see ",(0,i.kt)("a",{parentName:"li",href:"./image"},"Image"))),(0,i.kt)("h3",{id:"author-name"},"Author name"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.authorName")),(0,i.kt)("h3",{id:"owner-name"},"Owner name"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.ownerEmail")),(0,i.kt)("h3",{id:"publisher-name"},"Publisher name"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.publisherName")),(0,i.kt)("h3",{id:"publisher-url"},"Publisher URL"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.publisherUrl")),(0,i.kt)("h3",{id:"podcast-home-url"},"Podcast Home URL"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.landingPageUrl")),(0,i.kt)("h3",{id:"episodes"},"Episodes"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.episodes")),(0,i.kt)("p",null,"Filter and order episodes with parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"post_id"),": one episode matching the given post id"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"post_ids"),": list of episodes matching the given list of post ids"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"category"),": list of episodes matching the category slug"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"slug"),": one episode matching the given slug"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"slugs"),": list of episodes matching the given list of slugs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"post_status"),": Publication status of the post. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"publish")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"order"),": Designates the ascending or descending order of the ",(0,i.kt)("inlineCode",{parentName:"li"},"orderby")," parameter. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"DESC"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ASC")," - ascending order from lowest to highest values (1, 2, 3; a, b, c)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DESC")," - descending order from highest to lowest values (3, 2, 1; c, b, a)."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"orderby"),": Sort retrieved episodes by parameter. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"publicationDate"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"publicationDate")," - Order by publication date."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"recordingDate")," - Order by recording date."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"title")," - Order by title."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"slug")," - Order by episode slug."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"limit"),": Limit the number of returned episodes.")),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Iterate over all published episodes, ordered by publication date."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"{% for e in podcast.episodes %}\n  {{ e.title }}\n{% endfor %}\n")),(0,i.kt)("p",null,"Order by title in ascending order."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"{% for e in podcast.episodes({orderby: 'title', 'order': 'ASC'}) %}\n  {{ e.title }}\n{% endfor %}\n")),(0,i.kt)("p",null,"Fetch one ",(0,i.kt)("a",{parentName:"p",href:"./episode"},"episode")," by slug."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"{{ podcast.episodes({slug: 'pod001'}).title }}\n")),(0,i.kt)("h3",{id:"feeds"},"Feeds"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.feeds")),(0,i.kt)("p",null,"see ",(0,i.kt)("a",{parentName:"p",href:"./feed"},"feed")),(0,i.kt)("h3",{id:"feed"},"Feed"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.feed")),(0,i.kt)("p",null,"Single Feed by Slug/ID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},'{% set feed = podcast.feed("mp3") %}\nThe Feed: <a href="{{ feed.url }}">{{ feed.title }}</a>\n')),(0,i.kt)("p",null,"see ",(0,i.kt)("a",{parentName:"p",href:"./feed"},"feed")),(0,i.kt)("h3",{id:"license"},"License"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.license")),(0,i.kt)("p",null,"To render an HTML license, use ",(0,i.kt)("inlineCode",{parentName:"p"},"{% include '@core/license.twig'")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"{'license': podcast.license} %}")),(0,i.kt)("p",null,"see ",(0,i.kt)("a",{parentName:"p",href:"./license"},"license")),(0,i.kt)("h3",{id:"setting"},"Setting"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.setting")),(0,i.kt)("p",null,"Get a podcast setting. Valid namespaces / names:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"website",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"merge_episodes"),(0,i.kt)("li",{parentName:"ul"},"hide_wp_feed_discovery"),(0,i.kt)("li",{parentName:"ul"},"use_post_permastruct"),(0,i.kt)("li",{parentName:"ul"},"custom_episode_slug"),(0,i.kt)("li",{parentName:"ul"},"episode_archive"),(0,i.kt)("li",{parentName:"ul"},"episode_archive_slug"),(0,i.kt)("li",{parentName:"ul"},"url_template"),(0,i.kt)("li",{parentName:"ul"},"ssl_verify_peer"))),(0,i.kt)("li",{parentName:"ul"},"metadata",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"enable_episode_recording_date"),(0,i.kt)("li",{parentName:"ul"},"enable_episode_explicit"),(0,i.kt)("li",{parentName:"ul"},"enable_episode_license"))),(0,i.kt)("li",{parentName:"ul"},"redirects",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"podlove_setting_redirect"))),(0,i.kt)("li",{parentName:"ul"},"tracking",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"mode")))),(0,i.kt)("h3",{id:"contributors"},"Contributors"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.contributors")),(0,i.kt)("p",null,"List of podcast contributors"),(0,i.kt)("h4",{id:"examples-1"},"Examples"),(0,i.kt)("p",null,"Iterating over a list of contributors"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},'{% for contributor in podcast.contributors({scope: "podcast"}) %}\n    {{ contributor.name }}\n    {% if not loop.last %}, {% endif %}\n{% endfor %}\n')),(0,i.kt)("p",null,"Iterating over a grouped list of contributors"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},'{% for contributorGroup in podcast.contributors({scope: "podcast", groupby: "group"}) %}\n    <strong>{{ contributorGroup.group.title }}:</strong>\n    {% for contributor in contributorGroup.contributors %}\n        {{ contributor.name }}\n        {% if not loop.last %}, {% endif %}\n    {% endfor %}\n{% endfor %}\n')),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"id"),": Fetch one contributor by its id. DEPRECATED: Use ",(0,i.kt)("inlineCode",{parentName:"li"},"podcast.contributor(id)")," instead."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"scope"),": Either ",(0,i.kt)("inlineCode",{parentName:"li"},"global"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"globa-active")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"podcast"),". - ",(0,i.kt)("inlineCode",{parentName:"li"},"global")," returns all contributors. - ",(0,i.kt)("inlineCode",{parentName:"li"},"globa"),"-active\u201d returns all contributors with at least one contribution in a published episode. - ",(0,i.kt)("inlineCode",{parentName:"li"},"podcast")," returns the contributors configured in podcast settings. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"globa"),"-active\u201d."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"group"),": filter by group slug. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"all"),", which does not filter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"role"),": filter by role slug. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"all"),", which does not filter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"groupby"),": group or role slug. Group by ",(0,i.kt)("inlineCode",{parentName:"li"},"group")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"role"),". If used, the returned data is has another layer for the groups. See examples for more details."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"order"),": Designates the ascending or descending order of the ",(0,i.kt)("inlineCode",{parentName:"li"},"orderby")," parameter. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"DESC"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ASC")," - ascending order from lowest to highest values (1, 2, 3; a, b, c)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DESC")," - descending order from highest to lowest values (3, 2, 1; c, b, a)."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"orderby"),": Sort contributors by parameter. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"name"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")," - Order by public name.")))),(0,i.kt)("h3",{id:"contributor"},"Contributor"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.contributor")),(0,i.kt)("p",null,"Get one contributor by id."),(0,i.kt)("h4",{id:"examples-2"},"Examples"),(0,i.kt)("p",null,"Iterating over a list of contributors"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"{{ podcast.contributor('james').name }}\n")),(0,i.kt)("h3",{id:"seasons"},"Seasons"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.seasons")),(0,i.kt)("p",null,"List of podcast seasons"),(0,i.kt)("p",null,"Parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"order"),": (optional) ",(0,i.kt)("inlineCode",{parentName:"li"},"DESC")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"ASC"),". Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"ASC"))),(0,i.kt)("h3",{id:"shows"},"Shows"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.shows")),(0,i.kt)("p",null,"List of all Podcast shows."),(0,i.kt)("h4",{id:"examples-3"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"This podcast features several shows:\n<ul>\n    {% for show in podcast.shows %}\n     <li>{{ show.title }}</li>\n {% endfor %}\n</ul>\n")),(0,i.kt)("h3",{id:"services"},"Services"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.services")),(0,i.kt)("p",null,"List of service profiles"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"category"),": (optional) ",(0,i.kt)("inlineCode",{parentName:"li"},"social"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"donation")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"all"),". Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"all")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"type"),": (optional) Filter services by type. List of all service types: 500px, amazon wishlist, app.net, bandcamp, bitbucket, bitcoin, deviantart, diaspora, dogecoin, dribbble, facebook, flattr, flickr, generic wishlist, github, google+, instagram, jabber, last.fm, linkedin, litecoin, openstreetmap, paypal, miiverse, pinboard, pinterest, playstation network, skype, soundcloud, soup, steam, steam wishlist, thomann wishlist, twitch, tumblr, twitter, website, xbox live, xing, youtube")),(0,i.kt)("h4",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},'{% for service in podcast.services({category: "social"}) %}\n  <a target="_blank" title="{{ service.title }}" href="{{ service.profileUrl }}">\n    {{ service.image.html({width: 20}) }}\n  </a>\n{% endfor %}\n')),(0,i.kt)("h3",{id:"subscribe-button"},"Subscribe Button"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"podcast.subscribeButton")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-twig"},"{{ podcast.subscribeButton }}\n\n{{ podcast.subscribeButton({format: 'square', color: '#000000', style: 'frameless', size: 'medium'}) }}\n")),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"show"),': If you are using the "Shows" module, you can set the show slug. The button will then be for that show instead of the main podcast.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"format"),": Choose a button format, options are ",(0,i.kt)("inlineCode",{parentName:"li"},"rectangle"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"square")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"cover")," (Note: ",(0,i.kt)("inlineCode",{parentName:"li"},"cover")," has a max size of 300px) Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"cover")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"style"),": Choose a button style, options are ",(0,i.kt)("inlineCode",{parentName:"li"},"filled"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"outline")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"frameless"),". Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"filled")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"size"),": Size and style of the button (",(0,i.kt)("inlineCode",{parentName:"li"},"small"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"medium"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"big"),"). All of the sizes can be combined with ",(0,i.kt)("inlineCode",{parentName:"li"},"auto")," to adapt the button width to the available space like this: ",(0,i.kt)("inlineCode",{parentName:"li"},"bi")," auto\u2019. Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"big")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"color"),": Define the color of the button. Allowed are all notations for colors that CSS can understand (keyword, rgb-hex, rgb, rgba, hsl, hsla). Please Note: It is not possible to style multiple buttons/popups on the same page differently."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"language"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"de"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"en"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"eo"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"fi"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"fr"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"nl"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"zh")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"ja"),'. Defaults to podcast language setting. If you set the buttonid to "example123", your element must have the class \u201cpodlove-subscribe-button-example123\u201d.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"hide"),": Set totrue if you want to hide the default button element. Useful if you provide your own button via thebuttonid setting."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"buttonid"),": Use this if you want to trigger the button by clicking an element controlled by you.")))}d.isMDXComponent=!0}}]);